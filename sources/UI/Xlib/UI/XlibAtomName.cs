// Copyright Â© Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.

using System;

namespace TerraFX.UI;

internal static class XlibAtomName
{
#pragma warning disable IDE1006
    public static ReadOnlySpan<byte> _NET_ACTIVE_WINDOW => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x00 };

    public static ReadOnlySpan<byte> _NET_CLIENT_LIST => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x43, 0x4C, 0x49, 0x45, 0x4E, 0x54, 0x5F, 0x4C, 0x49, 0x53, 0x54, 0x00 };

    public static ReadOnlySpan<byte> _NET_CLIENT_LIST_STACKING => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x43, 0x4C, 0x49, 0x45, 0x4E, 0x54, 0x5F, 0x4C, 0x49, 0x53, 0x54, 0x5F, 0x53, 0x54, 0x41, 0x43, 0x4B, 0x49, 0x4E, 0x47, 0x00 };

    public static ReadOnlySpan<byte> _NET_CLOSE_WINDOW => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x43, 0x4C, 0x4F, 0x53, 0x45, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x00 };

    public static ReadOnlySpan<byte> _NET_CURRENT_DESKTOP => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4E, 0x54, 0x5F, 0x44, 0x45, 0x53, 0x4B, 0x54, 0x4F, 0x50, 0x00 };

    public static ReadOnlySpan<byte> _NET_DESKTOP_GEOMETRY => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x44, 0x45, 0x53, 0x4B, 0x54, 0x4F, 0x50, 0x5F, 0x47, 0x45, 0x4F, 0x4D, 0x45, 0x54, 0x52, 0x59, 0x00 };

    public static ReadOnlySpan<byte> _NET_DESKTOP_LAYOUT => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x44, 0x45, 0x53, 0x4B, 0x54, 0x4F, 0x50, 0x5F, 0x4C, 0x41, 0x59, 0x4F, 0x55, 0x54, 0x00 };

    public static ReadOnlySpan<byte> _NET_DESKTOP_NAMES => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x44, 0x45, 0x53, 0x4B, 0x54, 0x4F, 0x50, 0x5F, 0x4E, 0x41, 0x4D, 0x45, 0x53, 0x00 };

    public static ReadOnlySpan<byte> _NET_DESKTOP_VIEWPORT => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x44, 0x45, 0x53, 0x4B, 0x54, 0x4F, 0x50, 0x5F, 0x56, 0x49, 0x45, 0x57, 0x50, 0x4F, 0x52, 0x54, 0x00 };

    public static ReadOnlySpan<byte> _NET_FRAME_EXTENTS => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x46, 0x52, 0x41, 0x4D, 0x45, 0x5F, 0x45, 0x58, 0x54, 0x45, 0x4E, 0x54, 0x53, 0x00 };

    public static ReadOnlySpan<byte> _NET_MOVERESIZE_WINDOW => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x4D, 0x4F, 0x56, 0x45, 0x52, 0x45, 0x53, 0x49, 0x5A, 0x45, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x00 };

    public static ReadOnlySpan<byte> _NET_NUMBER_OF_DESKTOPS => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x4E, 0x55, 0x4D, 0x42, 0x45, 0x52, 0x5F, 0x4F, 0x46, 0x5F, 0x44, 0x45, 0x53, 0x4B, 0x54, 0x4F, 0x50, 0x53, 0x00 };

    public static ReadOnlySpan<byte> _NET_REQUEST_FRAME_EXTENTS => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5F, 0x46, 0x52, 0x41, 0x4D, 0x45, 0x5F, 0x45, 0x58, 0x54, 0x45, 0x4E, 0x54, 0x53, 0x00 };

    public static ReadOnlySpan<byte> _NET_RESTACK_WINDOW => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x52, 0x45, 0x53, 0x54, 0x41, 0x43, 0x4B, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x00 };

    public static ReadOnlySpan<byte> _NET_SHOWING_DESKTOP => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x53, 0x48, 0x4F, 0x57, 0x49, 0x4E, 0x47, 0x5F, 0x44, 0x45, 0x53, 0x4B, 0x54, 0x4F, 0x50, 0x00 };

    public static ReadOnlySpan<byte> _NET_SUPPORTED => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x53, 0x55, 0x50, 0x50, 0x4F, 0x52, 0x54, 0x45, 0x44, 0x00 };

    public static ReadOnlySpan<byte> _NET_SUPPORTING_WM_CHECK => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x53, 0x55, 0x50, 0x50, 0x4F, 0x52, 0x54, 0x49, 0x4E, 0x47, 0x5F, 0x57, 0x4D, 0x5F, 0x43, 0x48, 0x45, 0x43, 0x4B, 0x00 };

    public static ReadOnlySpan<byte> _NET_VIRTUAL_ROOTS => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4C, 0x5F, 0x52, 0x4F, 0x4F, 0x54, 0x53, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ACTION_ABOVE => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x41, 0x42, 0x4F, 0x56, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ACTION_BELOW => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x42, 0x45, 0x4C, 0x4F, 0x57, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ACTION_CHANGE_DESKTOP => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x43, 0x48, 0x41, 0x4E, 0x47, 0x45, 0x5F, 0x44, 0x45, 0x53, 0x4B, 0x54, 0x4F, 0x50, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ACTION_CLOSE => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x43, 0x4C, 0x4F, 0x53, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ACTION_FULLSCREEN => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x46, 0x55, 0x4C, 0x4C, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4E, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ACTION_MAXIMIZE_HORZ => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x4D, 0x41, 0x58, 0x49, 0x4D, 0x49, 0x5A, 0x45, 0x5F, 0x48, 0x4F, 0x52, 0x5A, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ACTION_MAXIMIZE_VERT => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x4D, 0x41, 0x58, 0x49, 0x4D, 0x49, 0x5A, 0x45, 0x5F, 0x56, 0x45, 0x52, 0x54, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ACTION_MINIMIZE => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x4D, 0x49, 0x4E, 0x49, 0x4D, 0x49, 0x5A, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ACTION_MOVE => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x4D, 0x4F, 0x56, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ACTION_RESIZE => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x52, 0x45, 0x53, 0x49, 0x5A, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ACTION_SHADE => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x53, 0x48, 0x41, 0x44, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ACTION_STICK => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x5F, 0x53, 0x54, 0x49, 0x43, 0x4B, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ALLOWED_ACTIONS => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x41, 0x4C, 0x4C, 0x4F, 0x57, 0x45, 0x44, 0x5F, 0x41, 0x43, 0x54, 0x49, 0x4F, 0x4E, 0x53, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_BYPASS_COMPOSITOR => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x42, 0x59, 0x50, 0x41, 0x53, 0x53, 0x5F, 0x43, 0x4F, 0x4D, 0x50, 0x4F, 0x53, 0x49, 0x54, 0x4F, 0x52, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_DESKTOP => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x44, 0x45, 0x53, 0x4B, 0x54, 0x4F, 0x50, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_FULL_PLACEMENT => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x46, 0x55, 0x4C, 0x4C, 0x5F, 0x50, 0x4C, 0x41, 0x43, 0x45, 0x4D, 0x45, 0x4E, 0x54, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_FULLSCREEN_MONITORS => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x46, 0x55, 0x4C, 0x4C, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4E, 0x5F, 0x4D, 0x4F, 0x4E, 0x49, 0x54, 0x4F, 0x52, 0x53, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_HANDLED_ICONS => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x48, 0x41, 0x4E, 0x44, 0x4C, 0x45, 0x44, 0x5F, 0x49, 0x43, 0x4F, 0x4E, 0x53, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ICON => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x49, 0x43, 0x4F, 0x4E, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ICON_GEOMETRY => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x49, 0x43, 0x4F, 0x4E, 0x5F, 0x47, 0x45, 0x4F, 0x4D, 0x45, 0x54, 0x52, 0x59, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_ICON_NAME => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x49, 0x43, 0x4F, 0x4E, 0x5F, 0x4E, 0x41, 0x4D, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_MOVERESIZE => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x4D, 0x4F, 0x56, 0x45, 0x52, 0x45, 0x53, 0x49, 0x5A, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_NAME => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x4E, 0x41, 0x4D, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_OPAQUE_REGION => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x4F, 0x50, 0x41, 0x51, 0x55, 0x45, 0x5F, 0x52, 0x45, 0x47, 0x49, 0x4F, 0x4E, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_PID => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x50, 0x49, 0x44, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_PING => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x50, 0x49, 0x4E, 0x47, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE_ABOVE => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5F, 0x41, 0x42, 0x4F, 0x56, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE_BELOW => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5F, 0x42, 0x45, 0x4C, 0x4F, 0x57, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE_DEMANDS_ATTENTION => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5F, 0x44, 0x45, 0x4D, 0x41, 0x4E, 0x44, 0x53, 0x5F, 0x41, 0x54, 0x54, 0x45, 0x4E, 0x54, 0x49, 0x4F, 0x4E, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE_FOCUSED => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5F, 0x46, 0x4F, 0x43, 0x55, 0x53, 0x45, 0x44, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE_FULLSCREEN => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5F, 0x46, 0x55, 0x4C, 0x4C, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4E, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE_HIDDEN => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5F, 0x48, 0x49, 0x44, 0x44, 0x45, 0x4E, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE_MAXIMIZED_HORZ => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5F, 0x4D, 0x41, 0x58, 0x49, 0x4D, 0x49, 0x5A, 0x45, 0x44, 0x5F, 0x48, 0x4F, 0x52, 0x5A, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE_MAXIMIZED_VERT => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5F, 0x4D, 0x41, 0x58, 0x49, 0x4D, 0x49, 0x5A, 0x45, 0x44, 0x5F, 0x56, 0x45, 0x52, 0x54, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE_MODAL => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5F, 0x4D, 0x4F, 0x44, 0x41, 0x4C, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE_SHADED => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5F, 0x53, 0x48, 0x41, 0x44, 0x45, 0x44, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE_SKIP_PAGER => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5F, 0x53, 0x4B, 0x49, 0x50, 0x5F, 0x50, 0x41, 0x47, 0x45, 0x52, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE_SKIP_TASKBAR => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5F, 0x53, 0x4B, 0x49, 0x50, 0x5F, 0x54, 0x41, 0x53, 0x4B, 0x42, 0x41, 0x52, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STATE_STICKY => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5F, 0x53, 0x54, 0x49, 0x43, 0x4B, 0x59, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STRUT => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x52, 0x55, 0x54, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_STRUT_PARTIAL => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x52, 0x55, 0x54, 0x5F, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4C, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_SYNC_REQUEST => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x53, 0x59, 0x4E, 0x43, 0x5F, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_USER_TIME => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x55, 0x53, 0x45, 0x52, 0x5F, 0x54, 0x49, 0x4D, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_USER_TIME_WINDOW => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x55, 0x53, 0x45, 0x52, 0x5F, 0x54, 0x49, 0x4D, 0x45, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_VISIBLE_NAME => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x56, 0x49, 0x53, 0x49, 0x42, 0x4C, 0x45, 0x5F, 0x4E, 0x41, 0x4D, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_VISIBLE_ICON_NAME => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x56, 0x49, 0x53, 0x49, 0x42, 0x4C, 0x45, 0x5F, 0x49, 0x43, 0x4F, 0x4E, 0x5F, 0x4E, 0x41, 0x4D, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_COMBO => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x43, 0x4F, 0x4D, 0x42, 0x4F, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_DESKTOP => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x44, 0x45, 0x53, 0x4B, 0x54, 0x4F, 0x50, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_DIALOG => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x44, 0x49, 0x41, 0x4C, 0x4F, 0x47, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_DND => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x44, 0x4E, 0x44, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_DOCK => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x44, 0x4F, 0x43, 0x4B, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_DROPDOWN_MENU => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x44, 0x52, 0x4F, 0x50, 0x44, 0x4F, 0x57, 0x4E, 0x5F, 0x4D, 0x45, 0x4E, 0x55, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_MENU => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x4D, 0x45, 0x4E, 0x55, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_NORMAL => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x4E, 0x4F, 0x52, 0x4D, 0x41, 0x4C, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_NOTIFICATION => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x4E, 0x4F, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_POPUP_MENU => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x50, 0x4F, 0x50, 0x55, 0x50, 0x5F, 0x4D, 0x45, 0x4E, 0x55, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_SPLASH => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x53, 0x50, 0x4C, 0x41, 0x53, 0x48, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_TOOLBAR => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x54, 0x4F, 0x4F, 0x4C, 0x42, 0x41, 0x52, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_TOOLTIP => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x54, 0x4F, 0x4F, 0x4C, 0x54, 0x49, 0x50, 0x00 };

    public static ReadOnlySpan<byte> _NET_WM_WINDOW_TYPE_UTILITY => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4D, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x5F, 0x54, 0x59, 0x50, 0x45, 0x5F, 0x55, 0x54, 0x49, 0x4C, 0x49, 0x54, 0x59, 0x00 };

    public static ReadOnlySpan<byte> _NET_WORKAREA => new byte[] { 0x5F, 0x4E, 0x45, 0x54, 0x5F, 0x57, 0x4F, 0x52, 0x4B, 0x41, 0x52, 0x45, 0x41, 0x00 };

    public static ReadOnlySpan<byte> _TERRAFX_CREATE_WINDOW => new byte[] { 0x5F, 0x54, 0x45, 0x52, 0x52, 0x41, 0x46, 0x58, 0x5F, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x00 };

    public static ReadOnlySpan<byte> _TERRAFX_DISPOSE_WINDOW => new byte[] { 0x5F, 0x54, 0x45, 0x52, 0x52, 0x41, 0x46, 0x58, 0x5F, 0x44, 0x49, 0x53, 0x50, 0x4F, 0x53, 0x45, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x00 };

    public static ReadOnlySpan<byte> _TERRAFX_NATIVE_INT => new byte[] { 0x5F, 0x54, 0x45, 0x52, 0x52, 0x41, 0x46, 0x58, 0x5F, 0x4E, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5F, 0x49, 0x4E, 0x54, 0x00 };

    public static ReadOnlySpan<byte> _TERRAFX_WINDOWSERVICE => new byte[] { 0x5F, 0x54, 0x45, 0x52, 0x52, 0x41, 0x46, 0x58, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x00 };

    public static ReadOnlySpan<byte> UTF8_STRING => new byte[] { 0x55, 0x54, 0x46, 0x38, 0x5F, 0x53, 0x54, 0x52, 0x49, 0x4E, 0x47, 0x00 };

    public static ReadOnlySpan<byte> WM_DELETE_WINDOW => new byte[] { 0x57, 0x4D, 0x5F, 0x44, 0x45, 0x4C, 0x45, 0x54, 0x45, 0x5F, 0x57, 0x49, 0x4E, 0x44, 0x4F, 0x57, 0x00 };

    public static ReadOnlySpan<byte> WM_PROTOCOLS => new byte[] { 0x57, 0x4D, 0x5F, 0x50, 0x52, 0x4F, 0x54, 0x4F, 0x43, 0x4F, 0x4C, 0x53, 0x00 };

    public static ReadOnlySpan<byte> WM_STATE => new byte[] { 0x57, 0x4D, 0x5F, 0x53, 0x54, 0x41, 0x54, 0x45, 0x00 };
#pragma warning restore IDE1006
}
